// Code generated by entc, DO NOT EDIT.

package brand

const (
	// Label holds the string label denoting the brand type in the database.
	Label = "brand"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"

	// EdgeProducts holds the string denoting the products edge name in mutations.
	EdgeProducts = "products"

	// Table holds the table name of the brand in the database.
	Table = "brands"
	// ProductsTable is the table the holds the products relation/edge. The primary key declared below.
	ProductsTable = "brand_products"
	// ProductsInverseTable is the table name for the Product entity.
	// It exists in this package in order to avoid circular dependency with the "product" package.
	ProductsInverseTable = "products"
)

// Columns holds all SQL columns for brand fields.
var Columns = []string{
	FieldID,
	FieldName,
}

var (
	// ProductsPrimaryKey and ProductsColumn2 are the table columns denoting the
	// primary key for the products relation (M2M).
	ProductsPrimaryKey = []string{"brand_id", "product_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// NameValidator is a validator for the "name" field. It is called by the builders before save.
	NameValidator func(string) error
)
