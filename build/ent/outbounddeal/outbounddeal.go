// Code generated by entc, DO NOT EDIT.

package outbounddeal

const (
	// Label holds the string label denoting the outbounddeal type in the database.
	Label = "outbound_deal"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldQuantity holds the string denoting the quantity field in the database.
	FieldQuantity = "quantity"
	// FieldAmount holds the string denoting the amount field in the database.
	FieldAmount = "amount"

	// EdgeVariant holds the string denoting the variant edge name in mutations.
	EdgeVariant = "variant"
	// EdgeParent holds the string denoting the parent edge name in mutations.
	EdgeParent = "parent"
	// EdgeChildren holds the string denoting the children edge name in mutations.
	EdgeChildren = "children"
	// EdgeTransaction holds the string denoting the transaction edge name in mutations.
	EdgeTransaction = "transaction"

	// Table holds the table name of the outbounddeal in the database.
	Table = "outbound_deals"
	// VariantTable is the table the holds the variant relation/edge.
	VariantTable = "outbound_deals"
	// VariantInverseTable is the table name for the Variant entity.
	// It exists in this package in order to avoid circular dependency with the "variant" package.
	VariantInverseTable = "variants"
	// VariantColumn is the table column denoting the variant relation/edge.
	VariantColumn = "outbound_deal_variant"
	// ParentTable is the table the holds the parent relation/edge.
	ParentTable = "outbound_deals"
	// ParentColumn is the table column denoting the parent relation/edge.
	ParentColumn = "outbound_deal_children"
	// ChildrenTable is the table the holds the children relation/edge.
	ChildrenTable = "outbound_deals"
	// ChildrenColumn is the table column denoting the children relation/edge.
	ChildrenColumn = "outbound_deal_children"
	// TransactionTable is the table the holds the transaction relation/edge.
	TransactionTable = "outbound_deals"
	// TransactionInverseTable is the table name for the OutboundTransaction entity.
	// It exists in this package in order to avoid circular dependency with the "outboundtransaction" package.
	TransactionInverseTable = "outbound_transactions"
	// TransactionColumn is the table column denoting the transaction relation/edge.
	TransactionColumn = "outbound_transaction_deals"
)

// Columns holds all SQL columns for outbounddeal fields.
var Columns = []string{
	FieldID,
	FieldQuantity,
	FieldAmount,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the OutboundDeal type.
var ForeignKeys = []string{
	"outbound_deal_variant",
	"outbound_deal_children",
	"outbound_transaction_deals",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}
