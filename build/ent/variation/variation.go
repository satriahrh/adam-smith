// Code generated by entc, DO NOT EDIT.

package variation

const (
	// Label holds the string label denoting the variation type in the database.
	Label = "variation"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldValue holds the string denoting the value field in the database.
	FieldValue = "value"

	// EdgeVariants holds the string denoting the variants edge name in mutations.
	EdgeVariants = "variants"

	// Table holds the table name of the variation in the database.
	Table = "variations"
	// VariantsTable is the table the holds the variants relation/edge.
	VariantsTable = "variants"
	// VariantsInverseTable is the table name for the Variant entity.
	// It exists in this package in order to avoid circular dependency with the "variant" package.
	VariantsInverseTable = "variants"
	// VariantsColumn is the table column denoting the variants relation/edge.
	VariantsColumn = "variant_variation"
)

// Columns holds all SQL columns for variation fields.
var Columns = []string{
	FieldID,
	FieldType,
	FieldValue,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TypeValidator is a validator for the "type" field. It is called by the builders before save.
	TypeValidator func(string) error
	// ValueValidator is a validator for the "value" field. It is called by the builders before save.
	ValueValidator func(string) error
)
